const axios = require("axios");

const paystack = axios.create({
  baseURL: "https://api.paystack.co",
  headers: {
    Authorization: `Bearer ${process.env.PAYSTACK_SECRET_KEY}`,
  },
});

const initializepayment = async (form) => {
  try {
    const response = await paystack.post("/transaction/initialize", form);
    return response.data;
  } catch (error) {
    console.error(error);
    throw new Error(
      error.response ? error.response.data.message : error.message
    );
  }
};

const verifypayment = async (ref) => {
  try {
    const response = await paystack.post(`/transaction/verify/${ref}`);
    return response.data;
  } catch (error) {
    console.error(error);
    throw new Error(
      error.response ? error.response.data.message : error.message
    );
  }
};

// Function generated by Chat gpt
const createTransferRecipient = async (name, accountNumber, bankCode) => {
  try {
    const response = await paystack.post("/transferrecipient", {
      type: "nuban",
      name,
      account_number: accountNumber,
      bank_code: bankCode,
      currency: "NGN",
    });
    return response.data;
  } catch (error) {
    console.error(error);
    throw new Error(
      error.response ? error.response.data.message : error.message
    );
  }
};

// Function generated by Chat gpt
const initiateTransfer = async (amount, recipientCode) => {
  try {
    const response = await paystack.post("/transfer", {
      source: "balance",
      amount,
      recipient: recipientCode,
      reason: "Withdrawal",
    });
    return response.data;
  } catch (error) {
    console.error(error);
    throw new Error(
      error.response ? error.response.data.message : error.message
    );
  }
};

// Function generated by Chat gpt
const checkTransferStatus = async (transferCode) => {
  try {
    const response = await paystack.get(`/transfer/${transferCode}`);
    return response.data;
  } catch (error) {
    console.error(error);
    throw new Error(
      error.response ? error.response.data.message : error.message
    );
  }
};

//These functions were generated by chatgpt because i did was to lazy to read paystack documentation

module.exports = {
  initializepayment,
  verifypayment,
  createTransferRecipient,
  initiateTransfer,
  checkTransferStatus,
};

// const paystack = () => {
//   const initializepayment = async (form) => {
//     try {
//       const options = {
//         url: "https://api.paystack.co/transaction/initialize",
//         headers: {
//           Authorization: `Bearer ${process.env.PAYSTACK_SECRET_KEY}`,
//           "Content-Type": "application/json",
//         },
//         data: form,
//       };

//       const response = await axios.post(options.url, options.data, {
//         headers: options.headers,
//       });

//       return response.data;
//     } catch (error) {
// throw new Error(
//   error.response ? error.response.data.message : error.message
// );
//     }
//   };

//   const verifypayment = async (ref) => {
//     try {
//       const options = {
//         url: `https://api.paystack.co/transaction/verify/${ref}`,
//         headers: {
//           Authorization: `Bearer ${process.env.PAYSTACK_SECRET_KEY}`,
//           "Content-Type": "application/json",
//         },
//       };

//       const response = await axios.get(options.url, {
//         headers: options.headers,
//       });

//       return response.data;
//     } catch (error) {
//       throw new Error(
//         error.response ? error.response.data.message : error.message
//       );
//     }
//   };
//   return { initializepayment, verifypayment };
// };
